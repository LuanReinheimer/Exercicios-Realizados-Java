Java parte 4: Entendendo exceções

Para mais teoria : https://www.w3schools.com/java/default.asp

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Veja as afirmações sobre o bloco finally:

a - O bloco finally é opcional quando há bloco catch.

b - O bloco finally sempre será executado (sem ou com exceção).

d - O bloco finally é tipicamente utilizado para fechar um recurso como conexão ou transação.


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
O que está garantido quando usamos o try-with-resources?

try(Conexao con = new Conexao()) {
     con.leDados();
}

O bloco finally é criado automaticamente.
Correto, automaticamente é criado um bloco finally. Nele é chamado o método close() do recurso.

O recurso precisa implementar o método close().
Correto, automaticamente é criado um bloco finally. Nele é chamado o método close() do recurso.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Nessa aula, aprendemos:

que existe um bloco finally, útil para o fechamento de recursos (como conexão);
quando há um bloco finally o bloco catch é opcional;
que o bloco finally é sempre executado, sem ou com exceção;
como usar o try-with-resources.
