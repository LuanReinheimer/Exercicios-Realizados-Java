Java parte 6: Conhecendo o java.util

Para mais teoria : https://www.w3schools.com/java/default.asp

ArrayList teoria e exemplos: https://www.w3schools.com/java/java_arraylist.asp

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
O que é verdade sobre o método equals?
Devemos sobrescrever para definir o critério de igualdade.

Correto, devemos sobrescrever o método equals para definir a igualdade do objeto.

Em geral, os métodos equals, toString e hashCode existem para sobrescrita.

A implementação padrão compara as referências.

Correto, a implementação do método equals da classe Object compara apenas as referências.

É definido na classe Object.

Correto, mas isso você já sabia :)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
O pacote java.util é de extrema importância no desenvolvimento Java. Sobre ele podemos afirmar que:+
List é uma interface, a ArrayList e a LinkedList são implementações
Todas as listas garantem a ordem de inserção.
Correto, as listas garantem a ordem de inserção. Isso significa que ao iterar recebemos os elementos na mesma ordem que eles foram inseridos.
Todas as listas possuem um índice.
Correto, as listas sempre possuem um índice (podemos acessar o elemento através da posição).

Além disso, existe mais uma característica: lista aceitam elementos duplicados, mas sobre isso falaremos um pouco mais na frente.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

LinkedList e ArrayList são duas implementações diferentes da interface List. A LinkedList é uma lista duplamente "linkada" 
e a ArrayList representa um array com redimensionamento dinâmico.

Cada uma das implementações tem as suas vantagens e desvantagens (na dúvida escolha ArrayList)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
A partir de agora vamos usar as listas para fugir das desvantagens do array. No entanto, se lembra do nosso array String[] do
 método main? Com certeza, e não podemos mudar a assinatura do método main pois a JVM não aceita isso. Bom, já que não podemos
 alterar a assinatura será que não tem uma forma de transformar uma array em uma lista? Claro que existe, e para tal, existe já uma classe que ajuda nessa tarefa: java.util.Arrays

A classe java.util.Arrays possui vários métodos estáticos auxiliares para trabalhar com arrays. Veja como fica simples de transformar um array para uma lista:

public class Teste {

  public static void main(String[] args) {
    List<String> argumentos = Arrays.asList(args);
  }
}
Vamos ver ainda outras funcionalidades da classe java.util.Arrays
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Nessa aula aprendemos:

como implementar o método equals para definir a igualdade
que o método equals é utilizado pelas listas
que existe mais uma lista, a java.util.LinkedList
a diferença entre ArrayList e LinkedList
a interface java.util.List que define os métodos da lista
No próximo capítulo veremos mais uma implementação da interface List