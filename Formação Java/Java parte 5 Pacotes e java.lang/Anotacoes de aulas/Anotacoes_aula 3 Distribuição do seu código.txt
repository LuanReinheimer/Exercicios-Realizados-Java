Java parte 5: Pacotes e java.lang

Para mais teoria : https://www.w3schools.com/java/default.asp

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Qual comentário devemos usar para declarar um javadoc no código fonte?
/**
* javadoc aqui
*/

Correto, importante é usar o char / seguidos por 2 chars **
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Já vimos nessa aula algumas tags (ou anotações) do javadoc como @version ou @author. Segue a lista completa:

@author (usado na classe ou interface)
@version (usado na classe ou interface)
@param (usado no método e construtor)
@return (usado apenas no método)
@exception ou @throws (no método ou construtor)
@see
@since
@serial
@deprecated
Importante é que as tags do javadoc existem apenas para padronizar alguns dados fundamentais do seu código fonte como o autor e a versão.

Outras anotações
Nos cursos você também já viu uma anotação fora do javadoc, a anotação @Override. Essa anotação é considerada uma configuração, nesse caso interpretado pelo compilador.

As anotações vão muito além das tags javadoc e são muito mais sofisticadas e poderosas. Elas só entraram na plataforma Java a partir da versão 1.5 enquanto o javadoc está presente desde o nascimento da plataforma Java. O interessante é que as anotações foram inspirados pelas tags do javadoc.

Se você ainda não está seguro sobre o uso das anotações, fique tranquilo pois você verá ainda muitas usadas pelas bibliotecas por ai para definir dados e configurações. Aguarde!
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Falamos no vídeo que JAR significa nada mais do que Java ARchive.

Que mais podemos dizer sobre o arquivo JAR? Assinale todas as afirmações corretas:
É o formato padrão do mundo Java para distribuir código compilado.
Correto, qualquer biblioteca ou projeto vai usar JAR(s) para distribuir o código.

É um arquivo compactado como ZIP.
Correto, é nada mais do que um arquivo ZIP, mas como a extensão .jar
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Nessa aula mais leve vimos e aprendemos:

quais comentários e tags (anotações) a usar para definir o javadoc
como gerar o javadoc no Eclipse
que javadoc é uma documentação para desenvolvedores
que as classes Java padrão também usam javadoc
como criar nossa própria biblioteca através do JAR (J*ava *ARchive)
como importar a biblioteca no novo projeto
como criar um JAR executável
Na próxima aula vamos conhecer o pacote java.lang.